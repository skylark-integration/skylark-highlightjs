{"version":3,"sources":["languages/kotlin.js"],"names":["define","hljs","KEYWORDS","keyword","built_in","literal","LABEL","className","begin","UNDERSCORE_IDENT_RE","SUBST","end","contains","APOS_STRING_MODE","C_NUMBER_MODE","VARIABLE","STRING","variants","illegal","BACKSLASH_ESCAPE","ANNOTATION_USE_SITE","ANNOTATION","inherit","KOTLIN_NUMBER_MODE","relevance","aliases","keywords","COMMENT","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","starts","beginKeywords","returnBegin","excludeEnd","UNDERSCORE_TITLE_MODE","endsParent","endsWithParent","excludeBegin","returnEnd"],"mappings":";;;;;;;AAMAA,QACE,gBACA,SAASC,GACT,IAAIC,GACFC,QACE,gbAOFC,SACE,kEACFC,QACE,mBAcAC,GACFC,UAAW,SAAUC,MAAOP,EAAKQ,oBAAsB,KAIrDC,GACFH,UAAW,QACXC,MAAO,OAAQG,IAAK,IAAKC,UAAWX,EAAKY,iBAAkBZ,EAAKa,gBAE9DC,GACFR,UAAW,WAAYC,MAAO,MAAQP,EAAKQ,qBAEzCO,GACFT,UAAW,SACXU,WAEIT,MAAO,MAAOG,IAAK,MACnBC,UAAWG,EAAUL,KAMrBF,MAAO,IAAMG,IAAK,IAClBO,QAAS,KACTN,UAAWX,EAAKkB,oBAGhBX,MAAO,IAAKG,IAAK,IACjBO,QAAS,KACTN,UAAWX,EAAKkB,iBAAkBJ,EAAUL,MAK9CU,GACFb,UAAW,OAAQC,MAAO,gFAAkFP,EAAKQ,oBAAsB,MAErIY,GACFd,UAAW,OAAQC,MAAO,IAAMP,EAAKQ,oBACrCG,WAEIJ,MAAO,KAAMG,IAAK,KAClBC,UACEX,EAAKqB,QAAQN,GAAST,UAAW,oBAuBrCgB,GACFhB,UAAW,SACXC,MAhBqB,uNAiBrBgB,UAAW,GAGb,OACEC,SAAU,MACVC,SAAUxB,EACVU,UACEX,EAAK0B,QACH,UACA,QAEEH,UAAY,EACZZ,WACEL,UAAY,SACZC,MAAQ,iBAIdP,EAAK2B,oBACL3B,EAAK4B,sBApGPtB,UAAW,UACXC,MAAO,mCACPsB,QACElB,WAEIL,UAAW,SACXC,MAAO,WAgGXF,EACAc,EACAC,GAEEd,UAAW,WACXwB,cAAe,MAAOpB,IAAK,QAC3BqB,aAAa,EACbC,YAAY,EACZP,SAAUxB,EACVgB,QAAS,yCACTM,UAAW,EACXZ,WAEIJ,MAAOP,EAAKQ,oBAAsB,UAAWuB,aAAa,EAC1DR,UAAW,EACXZ,UAAWX,EAAKiC,yBAGhB3B,UAAW,OACXC,MAAO,IAAKG,IAAK,IAAKe,SAAU,UAChCF,UAAW,IAGXjB,UAAW,SACXC,MAAO,KAAMG,IAAK,KAClBwB,YAAY,EACZT,SAAUxB,EACVsB,UAAW,EACXZ,WAEIJ,MAAO,IAAKG,IAAK,SAAUyB,gBAAgB,EAC3CxB,WACGL,UAAW,OAAQC,MAAOP,EAAKQ,qBAChCR,EAAK2B,oBACL3B,EAAK4B,sBAEPL,UAAW,GAEbvB,EAAK2B,oBACL3B,EAAK4B,qBACLT,EACAC,EACAL,EACAf,EAAKa,gBAGTb,EAAK4B,wBAIPtB,UAAW,QACXwB,cAAe,wBAAyBpB,IAAK,WAC7CsB,YAAY,EACZf,QAAS,qBACTN,WACGmB,cAAe,iDAChB9B,EAAKiC,uBAEH3B,UAAW,OACXC,MAAO,IAAKG,IAAK,IAAK0B,cAAc,EAAMJ,YAAY,EACtDT,UAAW,IAGXjB,UAAW,OACXC,MAAO,UAAWG,IAAK,WAAY0B,cAAc,EAAMC,WAAW,GAEpElB,EACAC,IAGJL,GAEET,UAAW,OACXC,MAAO,kBAAmBG,IAAK,IAC/BO,QAAS,MAEXK","file":"../../languages/kotlin.js","sourcesContent":["/*\n Language: Kotlin\n Author: Sergey Mashkov <cy6erGn0m@gmail.com>\n */\n\n\ndefine([\n  \"../highlight\"\n],function(hljs){\n  var KEYWORDS = {\n    keyword:\n      'abstract as val var vararg get set class object open private protected public noinline ' +\n      'crossinline dynamic final enum if else do while for when throw try catch finally ' +\n      'import package is in fun override companion reified inline lateinit init ' +\n      'interface annotation data sealed internal infix operator out by constructor super ' +\n      'tailrec where const inner suspend typealias external expect actual ' +\n      // to be deleted soon\n      'trait volatile transient native default',\n    built_in:\n      'Byte Short Char Int Long Boolean Float Double Void Unit Nothing',\n    literal:\n      'true false null'\n  };\n  var KEYWORDS_WITH_LABEL = {\n    className: 'keyword',\n    begin: /\\b(break|continue|return|this)\\b/,\n    starts: {\n      contains: [\n        {\n          className: 'symbol',\n          begin: /@\\w+/\n        }\n      ]\n    }\n  };\n  var LABEL = {\n    className: 'symbol', begin: hljs.UNDERSCORE_IDENT_RE + '@'\n  };\n\n  // for string templates\n  var SUBST = {\n    className: 'subst',\n    begin: '\\\\${', end: '}', contains: [hljs.APOS_STRING_MODE, hljs.C_NUMBER_MODE]\n  };\n  var VARIABLE = {\n    className: 'variable', begin: '\\\\$' + hljs.UNDERSCORE_IDENT_RE\n  };\n  var STRING = {\n    className: 'string',\n    variants: [\n      {\n        begin: '\"\"\"', end: '\"\"\"',\n        contains: [VARIABLE, SUBST]\n      },\n      // Can't use built-in modes easily, as we want to use STRING in the meta\n      // context as 'meta-string' and there's no syntax to remove explicitly set\n      // classNames in built-in modes.\n      {\n        begin: '\\'', end: '\\'',\n        illegal: /\\n/,\n        contains: [hljs.BACKSLASH_ESCAPE]\n      },\n      {\n        begin: '\"', end: '\"',\n        illegal: /\\n/,\n        contains: [hljs.BACKSLASH_ESCAPE, VARIABLE, SUBST]\n      }\n    ]\n  };\n\n  var ANNOTATION_USE_SITE = {\n    className: 'meta', begin: '@(?:file|property|field|get|set|receiver|param|setparam|delegate)\\\\s*:(?:\\\\s*' + hljs.UNDERSCORE_IDENT_RE + ')?'\n  };\n  var ANNOTATION = {\n    className: 'meta', begin: '@' + hljs.UNDERSCORE_IDENT_RE,\n    contains: [\n      {\n        begin: /\\(/, end: /\\)/,\n        contains: [\n          hljs.inherit(STRING, {className: 'meta-string'})\n        ]\n      }\n    ]\n  };\n\n  // https://kotlinlang.org/docs/reference/whatsnew11.html#underscores-in-numeric-literals\n  // According to the doc above, the number mode of kotlin is the same as java 8,\n  // so the code below is copied from java.js\n  var KOTLIN_NUMBER_RE = '\\\\b' +\n    '(' +\n      '0[bB]([01]+[01_]+[01]+|[01]+)' + // 0b...\n      '|' +\n      '0[xX]([a-fA-F0-9]+[a-fA-F0-9_]+[a-fA-F0-9]+|[a-fA-F0-9]+)' + // 0x...\n      '|' +\n      '(' +\n        '([\\\\d]+[\\\\d_]+[\\\\d]+|[\\\\d]+)(\\\\.([\\\\d]+[\\\\d_]+[\\\\d]+|[\\\\d]+))?' +\n        '|' +\n        '\\\\.([\\\\d]+[\\\\d_]+[\\\\d]+|[\\\\d]+)' +\n      ')' +\n      '([eE][-+]?\\\\d+)?' + // octal, decimal, float\n    ')' +\n    '[lLfF]?';\n  var KOTLIN_NUMBER_MODE = {\n    className: 'number',\n    begin: KOTLIN_NUMBER_RE,\n    relevance: 0\n  };\n\n  return {\n    aliases: ['kt'],\n    keywords: KEYWORDS,\n    contains : [\n      hljs.COMMENT(\n        '/\\\\*\\\\*',\n        '\\\\*/',\n        {\n          relevance : 0,\n          contains : [{\n            className : 'doctag',\n            begin : '@[A-Za-z]+'\n          }]\n        }\n      ),\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      KEYWORDS_WITH_LABEL,\n      LABEL,\n      ANNOTATION_USE_SITE,\n      ANNOTATION,\n      {\n        className: 'function',\n        beginKeywords: 'fun', end: '[(]|$',\n        returnBegin: true,\n        excludeEnd: true,\n        keywords: KEYWORDS,\n        illegal: /fun\\s+(<.*>)?[^\\s\\(]+(\\s+[^\\s\\(]+)\\s*=/,\n        relevance: 5,\n        contains: [\n          {\n            begin: hljs.UNDERSCORE_IDENT_RE + '\\\\s*\\\\(', returnBegin: true,\n            relevance: 0,\n            contains: [hljs.UNDERSCORE_TITLE_MODE]\n          },\n          {\n            className: 'type',\n            begin: /</, end: />/, keywords: 'reified',\n            relevance: 0\n          },\n          {\n            className: 'params',\n            begin: /\\(/, end: /\\)/,\n            endsParent: true,\n            keywords: KEYWORDS,\n            relevance: 0,\n            contains: [\n              {\n                begin: /:/, end: /[=,\\/]/, endsWithParent: true,\n                contains: [\n                  {className: 'type', begin: hljs.UNDERSCORE_IDENT_RE},\n                  hljs.C_LINE_COMMENT_MODE,\n                  hljs.C_BLOCK_COMMENT_MODE\n                ],\n                relevance: 0\n              },\n              hljs.C_LINE_COMMENT_MODE,\n              hljs.C_BLOCK_COMMENT_MODE,\n              ANNOTATION_USE_SITE,\n              ANNOTATION,\n              STRING,\n              hljs.C_NUMBER_MODE\n            ]\n          },\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'class interface trait', end: /[:\\{(]|$/, // remove 'trait' when removed from KEYWORDS\n        excludeEnd: true,\n        illegal: 'extends implements',\n        contains: [\n          {beginKeywords: 'public protected internal private constructor'},\n          hljs.UNDERSCORE_TITLE_MODE,\n          {\n            className: 'type',\n            begin: /</, end: />/, excludeBegin: true, excludeEnd: true,\n            relevance: 0\n          },\n          {\n            className: 'type',\n            begin: /[,:]\\s*/, end: /[<\\(,]|$/, excludeBegin: true, returnEnd: true\n          },\n          ANNOTATION_USE_SITE,\n          ANNOTATION\n        ]\n      },\n      STRING,\n      {\n        className: 'meta',\n        begin: \"^#!/usr/bin/env\", end: '$',\n        illegal: '\\n'\n      },\n      KOTLIN_NUMBER_MODE\n    ]\n  };\n});\n"]}