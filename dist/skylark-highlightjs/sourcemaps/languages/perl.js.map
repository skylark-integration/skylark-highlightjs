{"version":3,"sources":["languages/perl.js"],"names":["define","exports","module","__isValidToReturn","obj","Array","isArray","attr","__isEmptyObject","hljs","PERL_KEYWORDS","SUBST","className","begin","end","keywords","METHOD","VAR","variants","relevance","STRING_CONTAINS","BACKSLASH_ESCAPE","PERL_DEFAULT_CONTAINS","HASH_COMMENT_MODE","COMMENT","endsWithParent","contains","RE_STARTERS_RE","beginKeywords","excludeEnd","TITLE_MODE","subLanguage","aliases","lexemes"],"mappings":";;;;;;;AAAAA,UAAW,WACP,aACA,IAAIC,WACAC,KA+JJ,SAASC,EAAkBC,GACvB,MAAqB,iBAAPA,GAAmBC,MAAMC,QAAQF,KAPnD,SAAyBA,GACrB,IAAIG,EACJ,IAAKA,KAAQH,EACT,OAAO,EACX,OAAO,EAGiDI,CAAgBJ,GAE5E,OAjKAJ,QAAQ,gBAAiB,SAAUS,GAC/B,IAAIC,EAAgB,2iDAChBC,GACAC,UAAW,QACXC,MAAO,UACPC,IAAK,MACLC,SAAUL,GAEVM,GACAH,MAAO,MACPC,IAAK,KAELG,GACAC,WACML,MAAO,SACPA,MAAO,kDAELA,MAAO,iBACPM,UAAW,KAInBC,GACAX,EAAKY,iBACLV,EACAM,GAEAK,GACAL,EACAR,EAAKc,kBACLd,EAAKe,QAAQ,UAAW,UAAYC,gBAAgB,IACpDT,GAEIJ,UAAW,SACXc,SAAUN,EACVF,WAEQL,MAAO,kBACPC,IAAK,MACLK,UAAW,IAGXN,MAAO,kBACPC,IAAK,MACLK,UAAW,IAGXN,MAAO,kBACPC,IAAK,MACLK,UAAW,IAGXN,MAAO,kBACPC,IAAK,MACLK,UAAW,IAGXN,MAAO,kBACPC,IAAK,MACLK,UAAW,IAGXN,MAAO,UACPC,IAAK,IACLK,UAAW,IAGXN,MAAO,IACPC,IAAK,IACLY,UAAWjB,EAAKY,oBAGhBR,MAAO,IACPC,IAAK,MAGLD,MAAO,IACPC,IAAK,IACLY,UAAWjB,EAAKY,oBAGhBR,MAAO,SACPa,YACAP,UAAW,IAGXN,MAAO,mBACPa,YACAP,UAAW,MAKnBP,UAAW,SACXC,MAAO,4EACPM,UAAW,IAGXN,MAAO,WAAaJ,EAAKkB,eAAiB,gDAC1CZ,SAAU,kCACVI,UAAW,EACXO,UACIjB,EAAKc,mBAEDX,UAAW,SACXC,MAAO,8CACPM,UAAW,KAGXP,UAAW,SACXC,MAAO,WACPC,IAAK,UACLY,UAAWjB,EAAKY,kBAChBF,UAAW,MAKnBP,UAAW,WACXgB,cAAe,MACfd,IAAK,uBACLe,YAAY,EACZV,UAAW,EACXO,UAAWjB,EAAKqB,cAGhBjB,MAAO,UACPM,UAAW,IAGXN,MAAO,aACPC,IAAK,YACLiB,YAAa,cACbL,WACQb,MAAO,QACPC,IAAK,IACLF,UAAW,cAM3B,OAFAD,EAAMe,SAAWJ,EACjBN,EAAOU,SAAWJ,GAEdU,SACI,KACA,MAEJC,QAAS,UACTlB,SAAUL,EACVgB,SAAUJ,KAYdnB,EAAkBD,GACXA,EACFC,EAAkBF,SAChBA,aADN","file":"../../languages/perl.js","sourcesContent":["define([], function () {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    define(['../highlight'], function (hljs) {\n        var PERL_KEYWORDS = 'getpwent getservent quotemeta msgrcv scalar kill dbmclose undef lc ' + 'ma syswrite tr send umask sysopen shmwrite vec qx utime local oct semctl localtime ' + 'readpipe do return format read sprintf dbmopen pop getpgrp not getpwnam rewinddir qq' + 'fileno qw endprotoent wait sethostent bless s|0 opendir continue each sleep endgrent ' + 'shutdown dump chomp connect getsockname die socketpair close flock exists index shmget' + 'sub for endpwent redo lstat msgctl setpgrp abs exit select print ref gethostbyaddr ' + 'unshift fcntl syscall goto getnetbyaddr join gmtime symlink semget splice x|0 ' + 'getpeername recv log setsockopt cos last reverse gethostbyname getgrnam study formline ' + 'endhostent times chop length gethostent getnetent pack getprotoent getservbyname rand ' + 'mkdir pos chmod y|0 substr endnetent printf next open msgsnd readdir use unlink ' + 'getsockopt getpriority rindex wantarray hex system getservbyport endservent int chr ' + 'untie rmdir prototype tell listen fork shmread ucfirst setprotoent else sysseek link ' + 'getgrgid shmctl waitpid unpack getnetbyname reset chdir grep split require caller ' + 'lcfirst until warn while values shift telldir getpwuid my getprotobynumber delete and ' + 'sort uc defined srand accept package seekdir getprotobyname semop our rename seek if q|0 ' + 'chroot sysread setpwent no crypt getc chown sqrt write setnetent setpriority foreach ' + 'tie sin msgget map stat getlogin unless elsif truncate exec keys glob tied closedir' + 'ioctl socket readlink eval xor readline binmode setservent eof ord bind alarm pipe ' + 'atan2 getgrent exp time push setgrent gt lt or ne m|0 break given say state when';\n        var SUBST = {\n            className: 'subst',\n            begin: '[$@]\\\\{',\n            end: '\\\\}',\n            keywords: PERL_KEYWORDS\n        };\n        var METHOD = {\n            begin: '->{',\n            end: '}'\n        };\n        var VAR = {\n            variants: [\n                { begin: /\\$\\d/ },\n                { begin: /[\\$%@](\\^\\w\\b|#\\w+(::\\w+)*|{\\w+}|\\w+(::\\w*)*)/ },\n                {\n                    begin: /[\\$%@][^\\s\\w{]/,\n                    relevance: 0\n                }\n            ]\n        };\n        var STRING_CONTAINS = [\n            hljs.BACKSLASH_ESCAPE,\n            SUBST,\n            VAR\n        ];\n        var PERL_DEFAULT_CONTAINS = [\n            VAR,\n            hljs.HASH_COMMENT_MODE,\n            hljs.COMMENT('^\\\\=\\\\w', '\\\\=cut', { endsWithParent: true }),\n            METHOD,\n            {\n                className: 'string',\n                contains: STRING_CONTAINS,\n                variants: [\n                    {\n                        begin: 'q[qwxr]?\\\\s*\\\\(',\n                        end: '\\\\)',\n                        relevance: 5\n                    },\n                    {\n                        begin: 'q[qwxr]?\\\\s*\\\\[',\n                        end: '\\\\]',\n                        relevance: 5\n                    },\n                    {\n                        begin: 'q[qwxr]?\\\\s*\\\\{',\n                        end: '\\\\}',\n                        relevance: 5\n                    },\n                    {\n                        begin: 'q[qwxr]?\\\\s*\\\\|',\n                        end: '\\\\|',\n                        relevance: 5\n                    },\n                    {\n                        begin: 'q[qwxr]?\\\\s*\\\\<',\n                        end: '\\\\>',\n                        relevance: 5\n                    },\n                    {\n                        begin: 'qw\\\\s+q',\n                        end: 'q',\n                        relevance: 5\n                    },\n                    {\n                        begin: \"'\",\n                        end: \"'\",\n                        contains: [hljs.BACKSLASH_ESCAPE]\n                    },\n                    {\n                        begin: '\"',\n                        end: '\"'\n                    },\n                    {\n                        begin: '`',\n                        end: '`',\n                        contains: [hljs.BACKSLASH_ESCAPE]\n                    },\n                    {\n                        begin: '{\\\\w+}',\n                        contains: [],\n                        relevance: 0\n                    },\n                    {\n                        begin: '-?\\\\w+\\\\s*\\\\=\\\\>',\n                        contains: [],\n                        relevance: 0\n                    }\n                ]\n            },\n            {\n                className: 'number',\n                begin: '(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b',\n                relevance: 0\n            },\n            {\n                begin: '(\\\\/\\\\/|' + hljs.RE_STARTERS_RE + '|\\\\b(split|return|print|reverse|grep)\\\\b)\\\\s*',\n                keywords: 'split return print reverse grep',\n                relevance: 0,\n                contains: [\n                    hljs.HASH_COMMENT_MODE,\n                    {\n                        className: 'regexp',\n                        begin: '(s|tr|y)/(\\\\\\\\.|[^/])*/(\\\\\\\\.|[^/])*/[a-z]*',\n                        relevance: 10\n                    },\n                    {\n                        className: 'regexp',\n                        begin: '(m|qr)?/',\n                        end: '/[a-z]*',\n                        contains: [hljs.BACKSLASH_ESCAPE],\n                        relevance: 0\n                    }\n                ]\n            },\n            {\n                className: 'function',\n                beginKeywords: 'sub',\n                end: '(\\\\s*\\\\(.*?\\\\))?[;{]',\n                excludeEnd: true,\n                relevance: 5,\n                contains: [hljs.TITLE_MODE]\n            },\n            {\n                begin: '-\\\\w\\\\b',\n                relevance: 0\n            },\n            {\n                begin: '^__DATA__$',\n                end: '^__END__$',\n                subLanguage: 'mojolicious',\n                contains: [{\n                        begin: '^@@.*',\n                        end: '$',\n                        className: 'comment'\n                    }]\n            }\n        ];\n        SUBST.contains = PERL_DEFAULT_CONTAINS;\n        METHOD.contains = PERL_DEFAULT_CONTAINS;\n        return {\n            aliases: [\n                'pl',\n                'pm'\n            ],\n            lexemes: /[\\w\\.]+/,\n            keywords: PERL_KEYWORDS,\n            contains: PERL_DEFAULT_CONTAINS\n        };\n    });\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});"]}