{"version":3,"sources":["languages/xml.js"],"names":["define","hljs","TAG_INTERNALS","endsWithParent","illegal","relevance","contains","className","begin","endsParent","variants","end","aliases","case_insensitive","COMMENT","subLanguage","skip","inherit","APOS_STRING_MODE","QUOTE_STRING_MODE","keywords","name","starts","returnEnd"],"mappings":";;;;;;;AAKAA,QACE,gBACA,SAASC,GACT,IACIC,GACFC,gBAAgB,EAChBC,QAAS,IACTC,UAAW,EACXC,WAEIC,UAAW,OACXC,MARa,qBASbH,UAAW,IAGXG,MAAO,OACPH,UAAW,EACXC,WAEIC,UAAW,SACXE,YAAY,EACZC,WACGF,MAAO,IAAKG,IAAK,MACjBH,MAAO,IAAKG,IAAK,MACjBH,MAAO,sBAOpB,OACEI,SAAU,OAAQ,QAAS,MAAO,OAAQ,MAAO,MAAO,MAAO,SAC/DC,kBAAkB,EAClBP,WAEIC,UAAW,OACXC,MAAO,YAAaG,IAAK,IACzBN,UAAW,GACXC,WAAYE,MAAO,MAAOG,IAAK,SAEjCV,EAAKa,QACH,UACA,UAEET,UAAW,MAIbG,MAAO,kBAAmBG,IAAK,UAC/BN,UAAW,KAGXE,UAAW,OACXC,MAAO,SAAUG,IAAK,MAAON,UAAW,KAGxCG,MAAO,YAAaG,IAAK,MACzBI,YAAa,MACbT,WAGGE,MAAO,OAAQG,IAAK,OAAQK,MAAM,IAClCR,MAAO,KAAMG,IAAK,IAAKK,MAAM,IAC7BR,MAAO,KAAOG,IAAK,IAAMK,MAAM,GAChCf,EAAKgB,QAAQhB,EAAKiB,kBAAmBd,QAAS,KAAMG,UAAW,KAAMD,SAAU,KAAMU,MAAM,IAC3Ff,EAAKgB,QAAQhB,EAAKkB,mBAAoBf,QAAS,KAAMG,UAAW,KAAMD,SAAU,KAAMU,MAAM,OAI9FT,UAAW,MAOXC,MAAO,oBAAqBG,IAAK,IACjCS,UAAWC,KAAM,SACjBf,UAAWJ,GACXoB,QACEX,IAAK,WAAYY,WAAW,EAC5BR,aAAc,MAAO,UAIvBR,UAAW,MAEXC,MAAO,qBAAsBG,IAAK,IAClCS,UAAWC,KAAM,UACjBf,UAAWJ,GACXoB,QACEX,IAAK,aAAgBY,WAAW,EAChCR,aAAc,eAAgB,aAAc,aAAc,UAI5DR,UAAW,MACXC,MAAO,MAAOG,IAAK,MACnBL,WAEIC,UAAW,OAAQC,MAAO,aAAcH,UAAW,GAErDH","file":"../../languages/xml.js","sourcesContent":["/*\nLanguage: HTML, XML\nCategory: common\n*/\n\ndefine([\n  \"../highlight\"\n],function(hljs){\n  var XML_IDENT_RE = '[A-Za-z0-9\\\\._:-]+';\n  var TAG_INTERNALS = {\n    endsWithParent: true,\n    illegal: /</,\n    relevance: 0,\n    contains: [\n      {\n        className: 'attr',\n        begin: XML_IDENT_RE,\n        relevance: 0\n      },\n      {\n        begin: /=\\s*/,\n        relevance: 0,\n        contains: [\n          {\n            className: 'string',\n            endsParent: true,\n            variants: [\n              {begin: /\"/, end: /\"/},\n              {begin: /'/, end: /'/},\n              {begin: /[^\\s\"'=<>`]+/}\n            ]\n          }\n        ]\n      }\n    ]\n  };\n  return {\n    aliases: ['html', 'xhtml', 'rss', 'atom', 'xjb', 'xsd', 'xsl', 'plist'],\n    case_insensitive: true,\n    contains: [\n      {\n        className: 'meta',\n        begin: '<!DOCTYPE', end: '>',\n        relevance: 10,\n        contains: [{begin: '\\\\[', end: '\\\\]'}]\n      },\n      hljs.COMMENT(\n        '<!--',\n        '-->',\n        {\n          relevance: 10\n        }\n      ),\n      {\n        begin: '<\\\\!\\\\[CDATA\\\\[', end: '\\\\]\\\\]>',\n        relevance: 10\n      },\n      {\n        className: 'meta',\n        begin: /<\\?xml/, end: /\\?>/, relevance: 10\n      },\n      {\n        begin: /<\\?(php)?/, end: /\\?>/,\n        subLanguage: 'php',\n        contains: [\n          // We don't want the php closing tag ?> to close the PHP block when\n          // inside any of the following blocks:\n          {begin: '/\\\\*', end: '\\\\*/', skip: true},\n          {begin: 'b\"', end: '\"', skip: true},\n          {begin: 'b\\'', end: '\\'', skip: true},\n          hljs.inherit(hljs.APOS_STRING_MODE, {illegal: null, className: null, contains: null, skip: true}),\n          hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null, className: null, contains: null, skip: true})\n        ]\n      },\n      {\n        className: 'tag',\n        /*\n        The lookahead pattern (?=...) ensures that 'begin' only matches\n        '<style' as a single word, followed by a whitespace or an\n        ending braket. The '$' is needed for the lexeme to be recognized\n        by hljs.subMode() that tests lexemes outside the stream.\n        */\n        begin: '<style(?=\\\\s|>|$)', end: '>',\n        keywords: {name: 'style'},\n        contains: [TAG_INTERNALS],\n        starts: {\n          end: '</style>', returnEnd: true,\n          subLanguage: ['css', 'xml']\n        }\n      },\n      {\n        className: 'tag',\n        // See the comment in the <style tag about the lookahead pattern\n        begin: '<script(?=\\\\s|>|$)', end: '>',\n        keywords: {name: 'script'},\n        contains: [TAG_INTERNALS],\n        starts: {\n          end: '\\<\\/script\\>', returnEnd: true,\n          subLanguage: ['actionscript', 'javascript', 'handlebars', 'xml']\n        }\n      },\n      {\n        className: 'tag',\n        begin: '</?', end: '/?>',\n        contains: [\n          {\n            className: 'name', begin: /[^\\/><\\s]+/, relevance: 0\n          },\n          TAG_INTERNALS\n        ]\n      }\n    ]\n  };\n});\n"]}