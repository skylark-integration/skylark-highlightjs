{"version":3,"sources":["languages/haxe.js"],"names":["define","hljs","aliases","keywords","keyword","built_in","literal","contains","className","begin","end","BACKSLASH_ESCAPE","QUOTE_STRING_MODE","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","C_NUMBER_MODE","meta-keyword","excludeBegin","excludeEnd","relevance","beginKeywords","TITLE_MODE","IDENT_RE","illegal"],"mappings":";;;;;;;AAMAA,QACE,gBACA,SAASC,GAMT,OACEC,SAAU,MACVC,UACEC,QAAS,uRAITC,SACE,aACFC,QACE,qBAEJC,WACIC,UAAW,SACXC,MAAO,IAAMC,IAAK,IAClBH,UACEN,EAAKU,kBACHH,UAAW,QACXC,MAAO,SAAUC,IAAK,QAEtBF,UAAW,QACXC,MAAO,MAAOC,IAAK,UAIzBT,EAAKW,kBACLX,EAAKY,oBACLZ,EAAKa,qBACLb,EAAKc,eACHP,UAAW,OACXC,MAAO,KAAMC,IAAK,MAElBF,UAAW,OACXC,MAAO,IAAKC,IAAK,IACjBP,UAAWa,eAAgB,8BAE3BR,UAAW,OACXC,MAAO,UAAWC,IAAK,uBACvBO,cAAc,EAAMC,YAAY,EAChCC,UAAW,IAEXX,UAAW,OACXC,MAAO,UAAWC,IAAK,MACvBO,cAAc,EAAMC,YAAY,IAEhCV,UAAW,OACXC,MAAO,QAASC,IAAK,MACrBO,cAAc,EAAMC,YAAY,IAEhCV,UAAW,QACXY,cAAe,OAAQV,IAAK,MAC5BH,UACEN,EAAKoB,cAGPb,UAAW,QACXY,cAAe,WAAYV,IAAK,SAChCH,WACIC,UAAW,OACXC,MAAO,MAAOC,IAAK,MACnBO,cAAc,EAAMC,YAAY,IAEhCV,UAAW,OACXC,MAAO,SAAUC,IAAK,MACtBO,cAAc,EAAMC,YAAY,IAEhCV,UAAW,OACXC,MAAO,OAAQC,IAAK,MACpBO,cAAc,EAAMC,YAAY,GAElCjB,EAAKoB,YAEPlB,UACEC,QAAS,sBAGXI,UAAW,QACXC,MAAO,yBAA0BC,IAAK,SAAWQ,YAAY,EAC7Df,SAAU,kBACVI,WACIC,UAAW,UACXC,MAAO,4BACPN,SAAU,qBACVI,WAEIC,UAAW,OACXC,MAAOR,EAAKqB,SACZH,UAAW,KAIjBlB,EAAKoB,cAGPb,UAAW,WACXY,cAAe,WAAYV,IAAK,MAAOQ,YAAY,EACnDK,QAAS,MACThB,UACEN,EAAKoB,cAIXE,QAAS","file":"../../languages/haxe.js","sourcesContent":["/*\nLanguage: Haxe\nAuthor: Christopher Kaster <ikasoki@gmail.com> (Based on the actionscript.js language file by Alexander Myadzel)\nContributors: Kenton Hamaluik <kentonh@gmail.com>\n*/\n\ndefine([\n  \"../highlight\"\n],function(hljs){\n  var IDENT_RE = '[a-zA-Z_$][a-zA-Z0-9_$]*';\n  var IDENT_FUNC_RETURN_TYPE_RE = '([*]|[a-zA-Z_$][a-zA-Z0-9_$]*)';\n\n  var HAXE_BASIC_TYPES = 'Int Float String Bool Dynamic Void Array ';\n\n  return {\n    aliases: ['hx'],\n    keywords: {\n      keyword: 'break case cast catch continue default do dynamic else enum extern ' +\n               'for function here if import in inline never new override package private get set ' +\n               'public return static super switch this throw trace try typedef untyped using var while ' +\n               HAXE_BASIC_TYPES,\n      built_in:\n        'trace this',\n      literal:\n        'true false null _'\n    },\n    contains: [\n      { className: 'string', // interpolate-able strings\n        begin: '\\'', end: '\\'',\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          { className: 'subst', // interpolation\n            begin: '\\\\$\\\\{', end: '\\\\}'\n          },\n          { className: 'subst', // interpolation\n            begin: '\\\\$', end: '\\\\W}'\n          }\n        ]\n      },\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.C_NUMBER_MODE,\n      { className: 'meta', // compiler meta\n        begin: '@:', end: '$'\n      },\n      { className: 'meta', // compiler conditionals\n        begin: '#', end: '$',\n        keywords: {'meta-keyword': 'if else elseif end error'}\n      },\n      { className: 'type', // function types\n        begin: ':[ \\t]*', end: '[^A-Za-z0-9_ \\t\\\\->]',\n        excludeBegin: true, excludeEnd: true,\n        relevance: 0\n      },\n      { className: 'type', // types\n        begin: ':[ \\t]*', end: '\\\\W',\n        excludeBegin: true, excludeEnd: true\n      },\n      { className: 'type', // instantiation\n        begin: 'new *', end: '\\\\W',\n        excludeBegin: true, excludeEnd: true\n      },\n      { className: 'class', // enums\n        beginKeywords: 'enum', end: '\\\\{',\n        contains: [\n          hljs.TITLE_MODE\n        ]\n      },\n      { className: 'class', // abstracts\n        beginKeywords: 'abstract', end: '[\\\\{$]',\n        contains: [\n          { className: 'type',\n            begin: '\\\\(', end: '\\\\)',\n            excludeBegin: true, excludeEnd: true\n          },\n          { className: 'type',\n            begin: 'from +', end: '\\\\W',\n            excludeBegin: true, excludeEnd: true\n          },\n          { className: 'type',\n            begin: 'to +', end: '\\\\W',\n            excludeBegin: true, excludeEnd: true\n          },\n          hljs.TITLE_MODE\n        ],\n        keywords: {\n          keyword: 'abstract from to'\n        }\n      },\n      { className: 'class', // classes\n        begin: '\\\\b(class|interface) +', end: '[\\\\{$]',  excludeEnd: true,\n        keywords: 'class interface',\n        contains: [\n          { className: 'keyword',\n            begin: '\\\\b(extends|implements) +',\n            keywords: 'extends implements',\n            contains: [\n              {\n                className: 'type',\n                begin: hljs.IDENT_RE,\n                relevance: 0\n              }\n            ]\n          },\n          hljs.TITLE_MODE\n        ]\n      },\n      { className: 'function',\n        beginKeywords: 'function', end: '\\\\(', excludeEnd: true,\n        illegal: '\\\\S',\n        contains: [\n          hljs.TITLE_MODE\n        ]\n      }\n    ],\n    illegal: /<\\//\n  };\n});\n"]}