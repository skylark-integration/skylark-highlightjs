{"version":3,"sources":["languages/ada.js"],"names":["define","exports","module","__isValidToReturn","obj","Array","isArray","attr","__isEmptyObject","hljs","ID_REGEX","COMMENTS","COMMENT","VAR_DECLS","begin","end","illegal","contains","beginKeywords","endsParent","className","relevance","case_insensitive","keywords","keyword","literal","excludeBegin","excludeEnd","returnBegin"],"mappings":";;;;;;;AAAAA,UAAW,WACP,aACA,IAAIC,KACAC,KAqHJ,SAASC,EAAkBC,GACvB,MAAqB,iBAAPA,GAAmBC,MAAMC,QAAQF,KAPnD,SAAyBA,GACrB,IAAIG,EACJ,IAAKA,KAAQH,EACT,OAAO,EACX,OAAO,EAGiDI,CAAgBJ,GAE5E,OAvHAJ,QAAQ,gBAAiB,SAAUS,GAC/B,IAMIC,EAAW,4BAEXC,EAAWF,EAAKG,QAAQ,KAAM,KAC9BC,GACAC,MAAO,YACPC,IAAK,sBACLC,QALY,YAMZC,WAEQC,cAAe,0BACfC,YAAY,IAGZC,UAAW,UACXF,cAAe,yEAGfE,UAAW,OACXN,MAAOJ,EACPS,YAAY,EACZE,UAAW,KAIvB,OACIC,kBAAkB,EAClBC,UACIC,QAAS,4bACTC,QAAS,cAEbR,UACIN,GAEIS,UAAW,SACXN,MAAO,IACPC,IAAK,IACLE,WACQH,MAAO,KACPO,UAAW,MAInBD,UAAW,SACXN,MAAO,QAGPM,UAAW,SACXN,MAhDI,8GAiDJO,UAAW,IAGXD,UAAW,SACXN,MAAO,IAAMJ,IAGbU,UAAW,QACXN,MAAO,8DACPC,IAAK,SACLQ,SAAU,eACVG,cAAc,EACdC,YAAY,EACZX,QA5DI,cA+DJF,MAAO,yDACPC,IAAK,sCACLQ,SAAU,uDACVK,aAAa,EACbX,UACIN,GAEIS,UAAW,QACXN,MAAO,4CACPC,IAAK,eACLW,cAAc,EACdC,YAAY,EACZX,QA3EJ,aA6EAH,GAEIO,UAAW,OACXN,MAAO,gBACPC,IAAK,aACLQ,SAAU,SACVG,cAAc,EACdC,YAAY,EACZR,YAAY,EACZH,QAtFJ,gBA2FJI,UAAW,OACXN,MAAO,oBACPC,IAAK,OACLQ,SAAU,OACVG,cAAc,EACdV,QAhGI,aAkGRH,MAaRV,EAAkBD,GACXA,EACFC,EAAkBF,GAChBA,OADN","file":"../../languages/ada.js","sourcesContent":["define([], function () {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    define(['../highlight'], function (hljs) {\n        var INTEGER_RE = '\\\\d(_|\\\\d)*';\n        var EXPONENT_RE = '[eE][-+]?' + INTEGER_RE;\n        var DECIMAL_LITERAL_RE = INTEGER_RE + '(\\\\.' + INTEGER_RE + ')?' + '(' + EXPONENT_RE + ')?';\n        var BASED_INTEGER_RE = '\\\\w+';\n        var BASED_LITERAL_RE = INTEGER_RE + '#' + BASED_INTEGER_RE + '(\\\\.' + BASED_INTEGER_RE + ')?' + '#' + '(' + EXPONENT_RE + ')?';\n        var NUMBER_RE = '\\\\b(' + BASED_LITERAL_RE + '|' + DECIMAL_LITERAL_RE + ')';\n        var ID_REGEX = '[A-Za-z](_?[A-Za-z0-9.])*';\n        var BAD_CHARS = '[]{}%#\\'\"';\n        var COMMENTS = hljs.COMMENT('--', '$');\n        var VAR_DECLS = {\n            begin: '\\\\s+:\\\\s+',\n            end: '\\\\s*(:=|;|\\\\)|=>|$)',\n            illegal: BAD_CHARS,\n            contains: [\n                {\n                    beginKeywords: 'loop for declare others',\n                    endsParent: true\n                },\n                {\n                    className: 'keyword',\n                    beginKeywords: 'not null constant access function procedure in out aliased exception'\n                },\n                {\n                    className: 'type',\n                    begin: ID_REGEX,\n                    endsParent: true,\n                    relevance: 0\n                }\n            ]\n        };\n        return {\n            case_insensitive: true,\n            keywords: {\n                keyword: 'abort else new return abs elsif not reverse abstract end ' + 'accept entry select access exception of separate aliased exit or some ' + 'all others subtype and for out synchronized array function overriding ' + 'at tagged generic package task begin goto pragma terminate ' + 'body private then if procedure type case in protected constant interface ' + 'is raise use declare range delay limited record when delta loop rem while ' + 'digits renames with do mod requeue xor',\n                literal: 'True False'\n            },\n            contains: [\n                COMMENTS,\n                {\n                    className: 'string',\n                    begin: /\"/,\n                    end: /\"/,\n                    contains: [{\n                            begin: /\"\"/,\n                            relevance: 0\n                        }]\n                },\n                {\n                    className: 'string',\n                    begin: /'.'/\n                },\n                {\n                    className: 'number',\n                    begin: NUMBER_RE,\n                    relevance: 0\n                },\n                {\n                    className: 'symbol',\n                    begin: \"'\" + ID_REGEX\n                },\n                {\n                    className: 'title',\n                    begin: '(\\\\bwith\\\\s+)?(\\\\bprivate\\\\s+)?\\\\bpackage\\\\s+(\\\\bbody\\\\s+)?',\n                    end: '(is|$)',\n                    keywords: 'package body',\n                    excludeBegin: true,\n                    excludeEnd: true,\n                    illegal: BAD_CHARS\n                },\n                {\n                    begin: '(\\\\b(with|overriding)\\\\s+)?\\\\b(function|procedure)\\\\s+',\n                    end: '(\\\\bis|\\\\bwith|\\\\brenames|\\\\)\\\\s*;)',\n                    keywords: 'overriding function procedure with is renames return',\n                    returnBegin: true,\n                    contains: [\n                        COMMENTS,\n                        {\n                            className: 'title',\n                            begin: '(\\\\bwith\\\\s+)?\\\\b(function|procedure)\\\\s+',\n                            end: '(\\\\(|\\\\s+|$)',\n                            excludeBegin: true,\n                            excludeEnd: true,\n                            illegal: BAD_CHARS\n                        },\n                        VAR_DECLS,\n                        {\n                            className: 'type',\n                            begin: '\\\\breturn\\\\s+',\n                            end: '(\\\\s+|;|$)',\n                            keywords: 'return',\n                            excludeBegin: true,\n                            excludeEnd: true,\n                            endsParent: true,\n                            illegal: BAD_CHARS\n                        }\n                    ]\n                },\n                {\n                    className: 'type',\n                    begin: '\\\\b(sub)?type\\\\s+',\n                    end: '\\\\s+',\n                    keywords: 'type',\n                    excludeBegin: true,\n                    illegal: BAD_CHARS\n                },\n                VAR_DECLS\n            ]\n        };\n    });\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});"]}