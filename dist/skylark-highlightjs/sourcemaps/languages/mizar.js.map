{"version":3,"sources":["languages/mizar.js"],"names":["define","exports","module","__isValidToReturn","obj","Array","isArray","attr","__isEmptyObject","hljs","keywords","contains","COMMENT"],"mappings":";;;;;;;AAAAA,UAAW,WACP,aACA,IAAIC,WACAC,KAaJ,SAASC,EAAkBC,GACvB,MAAqB,iBAAPA,GAAmBC,MAAMC,QAAQF,KAPnD,SAAyBA,GACrB,IAAIG,EACJ,IAAKA,KAAQH,EACT,OAAO,EACX,OAAO,EAGiDI,CAAgBJ,GAE5E,OAfAJ,QAAQ,gBAAiB,SAAUS,GAC/B,OACIC,SAAU,ylBACVC,UAAWF,EAAKG,QAAQ,KAAM,SAYlCT,EAAkBD,GACXA,EACFC,EAAkBF,SAChBA,aADN","file":"../../languages/mizar.js","sourcesContent":["define([], function () {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    define(['../highlight'], function (hljs) {\n        return {\n            keywords: 'environ vocabularies notations constructors definitions ' + 'registrations theorems schemes requirements begin end definition ' + 'registration cluster existence pred func defpred deffunc theorem ' + 'proof let take assume then thus hence ex for st holds consider ' + 'reconsider such that and in provided of as from be being by means ' + 'equals implies iff redefine define now not or attr is mode ' + 'suppose per cases set thesis contradiction scheme reserve struct ' + 'correctness compatibility coherence symmetry assymetry ' + 'reflexivity irreflexivity connectedness uniqueness commutativity ' + 'idempotence involutiveness projectivity',\n            contains: [hljs.COMMENT('::', '$')]\n        };\n    });\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});"]}