{"version":3,"sources":["languages/asciidoc.js"],"names":["define","hljs","aliases","contains","COMMENT","relevance","className","begin","end","variants","excludeEnd","subLanguage","returnBegin","excludeBegin"],"mappings":";;;;;;;AASAA,QACE,gBACA,SAASC,GACT,OACEC,SAAU,QACVC,UAEEF,EAAKG,QACH,YACA,aAKEC,UAAW,KAIfJ,EAAKG,QACH,MACA,KAEEC,UAAW,KAKbC,UAAW,QACXC,MAAO,eAIPA,MAAO,iBACPC,IAAK,kBACLH,UAAW,KAIXC,UAAW,UACXD,UAAW,GACXI,WACGF,MAAO,0BACPA,MAAO,2CAKVD,UAAW,OACXC,MAAO,SACPC,IAAK,MACLE,YAAY,EACZL,UAAW,KAIXC,UAAW,OACXC,MAAO,cACPF,UAAW,IAIXC,UAAW,QACXC,MAAO,YACPC,IAAK,YACLH,UAAW,KAIXC,UAAW,OACXC,MAAO,mBACPC,IAAK,mBACLH,UAAW,KAIXE,MAAO,cACPC,IAAK,cACLL,WAEII,MAAO,IAAKC,IAAK,IACjBG,YAAa,MACbN,UAAW,IAGfA,UAAW,KAIXC,UAAW,SACXC,MAAO,qCAIPD,UAAW,SACXC,MAAO,6CACPF,UAAW,KAIXC,UAAW,SAEXC,MAAO,qBACPC,IAAK,eAELL,WAEII,MAAO,WACPF,UAAW,MAMfC,UAAW,WAEXC,MAAO,iBACPC,IAAK,aAELL,WAEII,MAAO,WACPF,UAAW,IAGfA,UAAW,IAIXC,UAAW,WAEXC,MAAO,cACPC,IAAK,aACLH,UAAW,IAIXC,UAAW,SACXG,WACGF,MAAO,YACPA,MAAO,YAKVD,UAAW,OACXC,MAAO,oBACPF,UAAW,IAIXC,UAAW,OACXC,MAAO,UACPC,IAAK,IACLH,UAAW,IAIXE,MAAO,iBACPF,UAAW,KAIXE,MAAO,0DACPK,aAAa,EACbT,WAEII,MAAO,kBACPF,UAAW,IAGXC,UAAW,OACXC,MAAO,MACPC,IAAK,UACLH,UAAW,IAGXC,UAAW,SACXC,MAAO,MACPC,IAAK,MACLK,cAAc,EACdH,YAAY,EACZL,UAAW,IAGfA,UAAW","file":"../../languages/asciidoc.js","sourcesContent":["/*\nLanguage: AsciiDoc\nRequires: xml.js\nAuthor: Dan Allen <dan.j.allen@gmail.com>\nWebsite: http://google.com/profiles/dan.j.allen\nDescription: A semantic, text-based document format that can be exported to HTML, DocBook and other backends.\nCategory: markup\n*/\n\ndefine([\n  \"../highlight\"\n],function(hljs){\n  return {\n    aliases: ['adoc'],\n    contains: [\n      // block comment\n      hljs.COMMENT(\n        '^/{4,}\\\\n',\n        '\\\\n/{4,}$',\n        // can also be done as...\n        //'^/{4,}$',\n        //'^/{4,}$',\n        {\n          relevance: 10\n        }\n      ),\n      // line comment\n      hljs.COMMENT(\n        '^//',\n        '$',\n        {\n          relevance: 0\n        }\n      ),\n      // title\n      {\n        className: 'title',\n        begin: '^\\\\.\\\\w.*$'\n      },\n      // example, admonition & sidebar blocks\n      {\n        begin: '^[=\\\\*]{4,}\\\\n',\n        end: '\\\\n^[=\\\\*]{4,}$',\n        relevance: 10\n      },\n      // headings\n      {\n        className: 'section',\n        relevance: 10,\n        variants: [\n          {begin: '^(={1,5}) .+?( \\\\1)?$'},\n          {begin: '^[^\\\\[\\\\]\\\\n]+?\\\\n[=\\\\-~\\\\^\\\\+]{2,}$'},\n        ]\n      },\n      // document attributes\n      {\n        className: 'meta',\n        begin: '^:.+?:',\n        end: '\\\\s',\n        excludeEnd: true,\n        relevance: 10\n      },\n      // block attributes\n      {\n        className: 'meta',\n        begin: '^\\\\[.+?\\\\]$',\n        relevance: 0\n      },\n      // quoteblocks\n      {\n        className: 'quote',\n        begin: '^_{4,}\\\\n',\n        end: '\\\\n_{4,}$',\n        relevance: 10\n      },\n      // listing and literal blocks\n      {\n        className: 'code',\n        begin: '^[\\\\-\\\\.]{4,}\\\\n',\n        end: '\\\\n[\\\\-\\\\.]{4,}$',\n        relevance: 10\n      },\n      // passthrough blocks\n      {\n        begin: '^\\\\+{4,}\\\\n',\n        end: '\\\\n\\\\+{4,}$',\n        contains: [\n          {\n            begin: '<', end: '>',\n            subLanguage: 'xml',\n            relevance: 0\n          }\n        ],\n        relevance: 10\n      },\n      // lists (can only capture indicators)\n      {\n        className: 'bullet',\n        begin: '^(\\\\*+|\\\\-+|\\\\.+|[^\\\\n]+?::)\\\\s+'\n      },\n      // admonition\n      {\n        className: 'symbol',\n        begin: '^(NOTE|TIP|IMPORTANT|WARNING|CAUTION):\\\\s+',\n        relevance: 10\n      },\n      // inline strong\n      {\n        className: 'strong',\n        // must not follow a word character or be followed by an asterisk or space\n        begin: '\\\\B\\\\*(?![\\\\*\\\\s])',\n        end: '(\\\\n{2}|\\\\*)',\n        // allow escaped asterisk followed by word char\n        contains: [\n          {\n            begin: '\\\\\\\\*\\\\w',\n            relevance: 0\n          }\n        ]\n      },\n      // inline emphasis\n      {\n        className: 'emphasis',\n        // must not follow a word character or be followed by a single quote or space\n        begin: '\\\\B\\'(?![\\'\\\\s])',\n        end: '(\\\\n{2}|\\')',\n        // allow escaped single quote followed by word char\n        contains: [\n          {\n            begin: '\\\\\\\\\\'\\\\w',\n            relevance: 0\n          }\n        ],\n        relevance: 0\n      },\n      // inline emphasis (alt)\n      {\n        className: 'emphasis',\n        // must not follow a word character or be followed by an underline or space\n        begin: '_(?![_\\\\s])',\n        end: '(\\\\n{2}|_)',\n        relevance: 0\n      },\n      // inline smart quotes\n      {\n        className: 'string',\n        variants: [\n          {begin: \"``.+?''\"},\n          {begin: \"`.+?'\"}\n        ]\n      },\n      // inline code snippets (TODO should get same treatment as strong and emphasis)\n      {\n        className: 'code',\n        begin: '(`.+?`|\\\\+.+?\\\\+)',\n        relevance: 0\n      },\n      // indented literal block\n      {\n        className: 'code',\n        begin: '^[ \\\\t]',\n        end: '$',\n        relevance: 0\n      },\n      // horizontal rules\n      {\n        begin: '^\\'{3,}[ \\\\t]*$',\n        relevance: 10\n      },\n      // images and links\n      {\n        begin: '(link:)?(http|https|ftp|file|irc|image:?):\\\\S+\\\\[.*?\\\\]',\n        returnBegin: true,\n        contains: [\n          {\n            begin: '(link|image:?):',\n            relevance: 0\n          },\n          {\n            className: 'link',\n            begin: '\\\\w',\n            end: '[^\\\\[]+',\n            relevance: 0\n          },\n          {\n            className: 'string',\n            begin: '\\\\[',\n            end: '\\\\]',\n            excludeBegin: true,\n            excludeEnd: true,\n            relevance: 0\n          }\n        ],\n        relevance: 10\n      }\n    ]\n  };\n});\n"]}