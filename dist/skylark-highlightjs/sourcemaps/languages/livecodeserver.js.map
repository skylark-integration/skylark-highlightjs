{"version":3,"sources":["languages/livecodeserver.js"],"names":["define","exports","module","__isValidToReturn","obj","Array","isArray","attr","__isEmptyObject","hljs","VARIABLE","begin","relevance","COMMENT_MODES","C_BLOCK_COMMENT_MODE","HASH_COMMENT_MODE","COMMENT","TITLE1","inherit","TITLE_MODE","variants","TITLE2","case_insensitive","keywords","keyword","literal","built_in","contains","className","beginKeywords","end","APOS_STRING_MODE","QUOTE_STRING_MODE","BINARY_NUMBER_MODE","C_NUMBER_MODE","concat","illegal"],"mappings":";;;;;;;AAAAA,UAAW,WACP,aACA,IAAIC,WACAC,KAgGJ,SAASC,EAAkBC,GACvB,MAAqB,iBAAPA,GAAmBC,MAAMC,QAAQF,KAPnD,SAAyBA,GACrB,IAAIG,EACJ,IAAKA,KAAQH,EACT,OAAO,EACX,OAAO,EAGiDI,CAAgBJ,GAE5E,OAlGAJ,QAAQ,gBAAiB,SAAUS,GAC/B,IAAIC,GACAC,MAAO,gDACPC,UAAW,GAEXC,GACAJ,EAAKK,qBACLL,EAAKM,kBACLN,EAAKO,QAAQ,KAAM,KACnBP,EAAKO,QAAQ,SAAU,MAEvBC,EAASR,EAAKS,QAAQT,EAAKU,YAC3BC,WACMT,MAAO,mCACPA,MAAO,uBAGbU,EAASZ,EAAKS,QAAQT,EAAKU,YAAcR,MAAO,6BACpD,OACIW,kBAAkB,EAClBC,UACIC,QAAS,4/BACTC,QAAS,gfACTC,SAAU,2wKAEdC,UACIjB,GAEIkB,UAAW,UACXjB,MAAO,mBAGPiB,UAAW,WACXC,cAAe,WACfC,IAAK,IACLH,UACIjB,EACAW,EACAZ,EAAKsB,iBACLtB,EAAKuB,kBACLvB,EAAKwB,mBACLxB,EAAKyB,cACLjB,KAIJW,UAAW,WACXjB,MAAO,aACPmB,IAAK,IACLP,SAAU,MACVI,UACIN,EACAJ,GAEJL,UAAW,IAGXiB,cAAe,aACfC,IAAK,IACLH,UACIjB,EACAW,EACAZ,EAAKsB,iBACLtB,EAAKuB,kBACLvB,EAAKwB,mBACLxB,EAAKyB,cACLjB,KAIJW,UAAW,OACXR,WAEQT,MAAO,wBACPC,UAAW,KAEbD,MAAO,SACPA,MAAO,UAGjBF,EAAKsB,iBACLtB,EAAKuB,kBACLvB,EAAKwB,mBACLxB,EAAKyB,cACLjB,GACFkB,OAAOtB,GACTuB,QAAS,oBAYbjC,EAAkBD,GACXA,EACFC,EAAkBF,SAChBA,aADN","file":"../../languages/livecodeserver.js","sourcesContent":["define([], function () {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    define(['../highlight'], function (hljs) {\n        var VARIABLE = {\n            begin: '\\\\b[gtps][A-Z]+[A-Za-z0-9_\\\\-]*\\\\b|\\\\$_[A-Z]+',\n            relevance: 0\n        };\n        var COMMENT_MODES = [\n            hljs.C_BLOCK_COMMENT_MODE,\n            hljs.HASH_COMMENT_MODE,\n            hljs.COMMENT('--', '$'),\n            hljs.COMMENT('[^:]//', '$')\n        ];\n        var TITLE1 = hljs.inherit(hljs.TITLE_MODE, {\n            variants: [\n                { begin: '\\\\b_*rig[A-Z]+[A-Za-z0-9_\\\\-]*' },\n                { begin: '\\\\b_[a-z0-9\\\\-]+' }\n            ]\n        });\n        var TITLE2 = hljs.inherit(hljs.TITLE_MODE, { begin: '\\\\b([A-Za-z0-9_\\\\-]+)\\\\b' });\n        return {\n            case_insensitive: false,\n            keywords: {\n                keyword: '$_COOKIE $_FILES $_GET $_GET_BINARY $_GET_RAW $_POST $_POST_BINARY $_POST_RAW $_SESSION $_SERVER ' + 'codepoint codepoints segment segments codeunit codeunits sentence sentences trueWord trueWords paragraph ' + 'after byte bytes english the until http forever descending using line real8 with seventh ' + 'for stdout finally element word words fourth before black ninth sixth characters chars stderr ' + 'uInt1 uInt1s uInt2 uInt2s stdin string lines relative rel any fifth items from middle mid ' + 'at else of catch then third it file milliseconds seconds second secs sec int1 int1s int4 ' + 'int4s internet int2 int2s normal text item last long detailed effective uInt4 uInt4s repeat ' + 'end repeat URL in try into switch to words https token binfile each tenth as ticks tick ' + 'system real4 by dateItems without char character ascending eighth whole dateTime numeric short ' + 'first ftp integer abbreviated abbr abbrev private case while if ' + 'div mod wrap and or bitAnd bitNot bitOr bitXor among not in a an within ' + 'contains ends with begins the keys of keys',\n                literal: 'SIX TEN FORMFEED NINE ZERO NONE SPACE FOUR FALSE COLON CRLF PI COMMA ENDOFFILE EOF EIGHT FIVE ' + 'QUOTE EMPTY ONE TRUE RETURN CR LINEFEED RIGHT BACKSLASH NULL SEVEN TAB THREE TWO ' + 'six ten formfeed nine zero none space four false colon crlf pi comma endoffile eof eight five ' + 'quote empty one true return cr linefeed right backslash null seven tab three two ' + 'RIVERSION RISTATE FILE_READ_MODE FILE_WRITE_MODE FILE_WRITE_MODE DIR_WRITE_MODE FILE_READ_UMASK ' + 'FILE_WRITE_UMASK DIR_READ_UMASK DIR_WRITE_UMASK',\n                built_in: 'put abs acos aliasReference annuity arrayDecode arrayEncode asin atan atan2 average avg avgDev base64Decode ' + 'base64Encode baseConvert binaryDecode binaryEncode byteOffset byteToNum cachedURL cachedURLs charToNum ' + 'cipherNames codepointOffset codepointProperty codepointToNum codeunitOffset commandNames compound compress ' + 'constantNames cos date dateFormat decompress directories ' + 'diskSpace DNSServers exp exp1 exp2 exp10 extents files flushEvents folders format functionNames geometricMean global ' + 'globals hasMemory harmonicMean hostAddress hostAddressToName hostName hostNameToAddress isNumber ISOToMac itemOffset ' + 'keys len length libURLErrorData libUrlFormData libURLftpCommand libURLLastHTTPHeaders libURLLastRHHeaders ' + 'libUrlMultipartFormAddPart libUrlMultipartFormData libURLVersion lineOffset ln ln1 localNames log log2 log10 ' + 'longFilePath lower macToISO matchChunk matchText matrixMultiply max md5Digest median merge millisec ' + 'millisecs millisecond milliseconds min monthNames nativeCharToNum normalizeText num number numToByte numToChar ' + 'numToCodepoint numToNativeChar offset open openfiles openProcesses openProcessIDs openSockets ' + 'paragraphOffset paramCount param params peerAddress pendingMessages platform popStdDev populationStandardDeviation ' + 'populationVariance popVariance processID random randomBytes replaceText result revCreateXMLTree revCreateXMLTreeFromFile ' + 'revCurrentRecord revCurrentRecordIsFirst revCurrentRecordIsLast revDatabaseColumnCount revDatabaseColumnIsNull ' + 'revDatabaseColumnLengths revDatabaseColumnNames revDatabaseColumnNamed revDatabaseColumnNumbered ' + 'revDatabaseColumnTypes revDatabaseConnectResult revDatabaseCursors revDatabaseID revDatabaseTableNames ' + 'revDatabaseType revDataFromQuery revdb_closeCursor revdb_columnbynumber revdb_columncount revdb_columnisnull ' + 'revdb_columnlengths revdb_columnnames revdb_columntypes revdb_commit revdb_connect revdb_connections ' + 'revdb_connectionerr revdb_currentrecord revdb_cursorconnection revdb_cursorerr revdb_cursors revdb_dbtype ' + 'revdb_disconnect revdb_execute revdb_iseof revdb_isbof revdb_movefirst revdb_movelast revdb_movenext ' + 'revdb_moveprev revdb_query revdb_querylist revdb_recordcount revdb_rollback revdb_tablenames ' + 'revGetDatabaseDriverPath revNumberOfRecords revOpenDatabase revOpenDatabases revQueryDatabase ' + 'revQueryDatabaseBlob revQueryResult revQueryIsAtStart revQueryIsAtEnd revUnixFromMacPath revXMLAttribute ' + 'revXMLAttributes revXMLAttributeValues revXMLChildContents revXMLChildNames revXMLCreateTreeFromFileWithNamespaces ' + 'revXMLCreateTreeWithNamespaces revXMLDataFromXPathQuery revXMLEvaluateXPath revXMLFirstChild revXMLMatchingNode ' + 'revXMLNextSibling revXMLNodeContents revXMLNumberOfChildren revXMLParent revXMLPreviousSibling ' + 'revXMLRootNode revXMLRPC_CreateRequest revXMLRPC_Documents revXMLRPC_Error ' + 'revXMLRPC_GetHost revXMLRPC_GetMethod revXMLRPC_GetParam revXMLText revXMLRPC_Execute ' + 'revXMLRPC_GetParamCount revXMLRPC_GetParamNode revXMLRPC_GetParamType revXMLRPC_GetPath revXMLRPC_GetPort ' + 'revXMLRPC_GetProtocol revXMLRPC_GetRequest revXMLRPC_GetResponse revXMLRPC_GetSocket revXMLTree ' + 'revXMLTrees revXMLValidateDTD revZipDescribeItem revZipEnumerateItems revZipOpenArchives round sampVariance ' + 'sec secs seconds sentenceOffset sha1Digest shell shortFilePath sin specialFolderPath sqrt standardDeviation statRound ' + 'stdDev sum sysError systemVersion tan tempName textDecode textEncode tick ticks time to tokenOffset toLower toUpper ' + 'transpose truewordOffset trunc uniDecode uniEncode upper URLDecode URLEncode URLStatus uuid value variableNames ' + 'variance version waitDepth weekdayNames wordOffset xsltApplyStylesheet xsltApplyStylesheetFromFile xsltLoadStylesheet ' + 'xsltLoadStylesheetFromFile add breakpoint cancel clear local variable file word line folder directory URL close socket process ' + 'combine constant convert create new alias folder directory decrypt delete variable word line folder ' + 'directory URL dispatch divide do encrypt filter get include intersect kill libURLDownloadToFile ' + 'libURLFollowHttpRedirects libURLftpUpload libURLftpUploadFile libURLresetAll libUrlSetAuthCallback ' + 'libURLSetCustomHTTPHeaders libUrlSetExpect100 libURLSetFTPListCommand libURLSetFTPMode libURLSetFTPStopTime ' + 'libURLSetStatusCallback load multiply socket prepare process post seek rel relative read from process rename ' + 'replace require resetAll resolve revAddXMLNode revAppendXML revCloseCursor revCloseDatabase revCommitDatabase ' + 'revCopyFile revCopyFolder revCopyXMLNode revDeleteFolder revDeleteXMLNode revDeleteAllXMLTrees ' + 'revDeleteXMLTree revExecuteSQL revGoURL revInsertXMLNode revMoveFolder revMoveToFirstRecord revMoveToLastRecord ' + 'revMoveToNextRecord revMoveToPreviousRecord revMoveToRecord revMoveXMLNode revPutIntoXMLNode revRollBackDatabase ' + 'revSetDatabaseDriverPath revSetXMLAttribute revXMLRPC_AddParam revXMLRPC_DeleteAllDocuments revXMLAddDTD ' + 'revXMLRPC_Free revXMLRPC_FreeAll revXMLRPC_DeleteDocument revXMLRPC_DeleteParam revXMLRPC_SetHost ' + 'revXMLRPC_SetMethod revXMLRPC_SetPort revXMLRPC_SetProtocol revXMLRPC_SetSocket revZipAddItemWithData ' + 'revZipAddItemWithFile revZipAddUncompressedItemWithData revZipAddUncompressedItemWithFile revZipCancel ' + 'revZipCloseArchive revZipDeleteItem revZipExtractItemToFile revZipExtractItemToVariable revZipSetProgressCallback ' + 'revZipRenameItem revZipReplaceItemWithData revZipReplaceItemWithFile revZipOpenArchive send set sort split start stop ' + 'subtract union unload wait write'\n            },\n            contains: [\n                VARIABLE,\n                {\n                    className: 'keyword',\n                    begin: '\\\\bend\\\\sif\\\\b'\n                },\n                {\n                    className: 'function',\n                    beginKeywords: 'function',\n                    end: '$',\n                    contains: [\n                        VARIABLE,\n                        TITLE2,\n                        hljs.APOS_STRING_MODE,\n                        hljs.QUOTE_STRING_MODE,\n                        hljs.BINARY_NUMBER_MODE,\n                        hljs.C_NUMBER_MODE,\n                        TITLE1\n                    ]\n                },\n                {\n                    className: 'function',\n                    begin: '\\\\bend\\\\s+',\n                    end: '$',\n                    keywords: 'end',\n                    contains: [\n                        TITLE2,\n                        TITLE1\n                    ],\n                    relevance: 0\n                },\n                {\n                    beginKeywords: 'command on',\n                    end: '$',\n                    contains: [\n                        VARIABLE,\n                        TITLE2,\n                        hljs.APOS_STRING_MODE,\n                        hljs.QUOTE_STRING_MODE,\n                        hljs.BINARY_NUMBER_MODE,\n                        hljs.C_NUMBER_MODE,\n                        TITLE1\n                    ]\n                },\n                {\n                    className: 'meta',\n                    variants: [\n                        {\n                            begin: '<\\\\?(rev|lc|livecode)',\n                            relevance: 10\n                        },\n                        { begin: '<\\\\?' },\n                        { begin: '\\\\?>' }\n                    ]\n                },\n                hljs.APOS_STRING_MODE,\n                hljs.QUOTE_STRING_MODE,\n                hljs.BINARY_NUMBER_MODE,\n                hljs.C_NUMBER_MODE,\n                TITLE1\n            ].concat(COMMENT_MODES),\n            illegal: ';$|^\\\\[|^=|&|{'\n        };\n    });\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});"]}